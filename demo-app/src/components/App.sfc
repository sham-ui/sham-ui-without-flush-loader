<template>
    {% import WithoutFlushLoader from '../../../src/without-flush-loader.sfc' %}
    {% import Loader from './Loader.sht' %}

    <main>
        <pre>
            Loader without flush for sham-ui
        </pre>

        <p>
            <button :onclick={{this[ ref( 'toggleLoaded' ) ]}}>Toggle loaded. Now: {{loaded}}</button>
        </p>

        <p>
            <label for="delay">Delay: {{delay}}</label>
            <input id="delay" value={{delay}} :oninput={{this[ ref( 'delayOnInput' ) ]}}>
        </p>

        <p>
            {% if loaded %}
                Content loaded!
            {% else %}
                WithoutFlushLoader:
                <WithoutFlushLoader
                    loadingComponent={{Loader}}
                    delay={{delay}}/>
            {% endif %}
        </p>
    </main>
</template>

<script>
    function App( options, update ) {
        const loaded = ref();
        const delay = ref();

        const state = options( {
            [ loaded ]: false,
            [ delay ]: 100
        } );

        this[ ref( 'toggleLoaded' ) ] = () => update( {
            [ loaded ]: !state[ loaded ]
        } );

        this[ ref( 'delayOnInput' ) ] = ( e ) => update( {
            [ delay ]: parseInt( e.target.value, 10 )
        } );
    }
    export default Component( Template, App );
</script>
